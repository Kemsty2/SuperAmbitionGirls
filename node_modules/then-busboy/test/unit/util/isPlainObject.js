"use strict";

var _ava = _interopRequireDefault(require("ava"));

var _isPlainObject = _interopRequireDefault(require("../../../lib/util/isPlainObject"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _ava.default)("Should return a boolean value", t => {
  t.plan(3);
  t.is(typeof (0, _isPlainObject.default)(), "boolean");
  t.true((0, _isPlainObject.default)({}));
  t.false((0, _isPlainObject.default)("I am waiting for you last summer"));
});
(0, _ava.default)("Should return false when passed non-object value, " + "like some primitives of their constructors", t => {
  t.plan(8);
  t.false((0, _isPlainObject.default)(null));
  t.false((0, _isPlainObject.default)(undefined));
  t.false((0, _isPlainObject.default)(void 0));
  t.false((0, _isPlainObject.default)(0));
  t.false((0, _isPlainObject.default)(42));
  t.false((0, _isPlainObject.default)(new Number(2319))); // eslint-disable-line

  t.false((0, _isPlainObject.default)("Some whatever string")); // eslint-disable-next-line

  t.false((0, _isPlainObject.default)(new String("Some whatever string")));
});
(0, _ava.default)("Should return false when passed Array or RegExp", t => {
  t.plan(4);
  t.false((0, _isPlainObject.default)([]));
  t.false((0, _isPlainObject.default)(new Array())); // eslint-disable-line

  t.false((0, _isPlainObject.default)(/.*/));
  t.false((0, _isPlainObject.default)(new RegExp("/.*/")));
});
(0, _ava.default)("Should return true when passed an object literal or Object.create(null)", t => {
  t.plan(3);
  t.true((0, _isPlainObject.default)({}));
  t.true((0, _isPlainObject.default)(Object.create(null)));
  t.true((0, _isPlainObject.default)(new Object({
    key: "value"
  }))); // eslint-disable-line
});