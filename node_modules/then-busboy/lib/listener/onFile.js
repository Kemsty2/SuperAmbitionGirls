"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _stream = require("stream");

var _File = _interopRequireDefault(require("../File"));

var _getFieldPath = _interopRequireDefault(require("../util/getFieldPath"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Get a file from part and push it to entries array
 *
 * @api private
 */
const onFile = (options, cb) => (fieldname, stream, filename, enc, mime) => {
  try {
    const path = (0, _getFieldPath.default)(fieldname);
    const contents = new _stream.Readable({
      read() {
        /* noop */
      }

    });

    const onData = ch => void contents.push(ch);

    function onEnd() {
      contents.push(null);
      const file = new _File.default({
        filename,
        contents,
        enc,
        mime
      });
      cb(null, [path, file]);
    } // Busboy doesn't emit an "end" event while file stream have not been read.
    // So, we just read the stream and push it to the other [Readable] one. o_O


    stream.on("error", cb).on("data", onData).on("end", onEnd);
  } catch (err) {
    return cb(err);
  }
};

var _default = onFile;
exports.default = _default;